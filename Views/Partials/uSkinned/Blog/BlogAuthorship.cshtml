@inherits USNStarterKit.ViewPages.USNViewPage<USNStarterKit.Models.USNBaseViewModel>

@{
    int blogLandingPageID = Convert.ToInt32(ViewData["blogLandingPageID"]);
    UsnblogLandingPage landing = (UsnblogLandingPage)Umbraco.Content(blogLandingPageID);

    UsnblogAuthor authorNode = null;

    if (Model.Content.Value<IEnumerable<IPublishedContent>>("postAuthor") != null && Model.Content.Value<IEnumerable<IPublishedContent>>("postAuthor").FirstOrDefault() != null)
    {
        authorNode = (UsnblogAuthor)Model.Content.Value<IEnumerable<IPublishedContent>>("postAuthor").FirstOrDefault();
    }
    else if (landing.DefaultAuthor != null)
    {
        authorNode = (UsnblogAuthor)landing.DefaultAuthor.FirstOrDefault();
    }

    if (authorNode != null)
    {
        string authorName = authorNode.Name;

        <!-- Author Bio -->
        <section class="content component author-bio base-bg">
            <div class="item item_text-left">

                @if (authorNode.AuthorImage != null)
                {
                    string bgColor = String.Empty;

                    Usnstyle websiteStyle = (Usnstyle)Model.WebsiteStyle;
                    bgColor = websiteStyle.StyleColors.contentBackground;

                    USNImageSettings imageSettings = Umbraco.GetImageSettings(authorNode.ImageStyle, authorNode.BoxPad);

                    <div class="image">
                        @Html.Partial(Model.ThemeFolder + "/MiscPageElements/Image", authorNode.AuthorImage, new ViewDataDictionary { { "imageSettings", imageSettings } })
                    </div>
                }
                <!-- Info -->
                <div class="info">

                    <p class="secondary-heading base-secondary-heading sm">@Umbraco.GetDictionaryValue("USN Blog About The Author")</p>
                    <p class="heading base-heading sm">
                        @if (authorNode.AuthorPage.HasValue() && USNThemeService.DisplayLink(authorNode.AuthorPage))
                        {
                            authorName = authorNode.AuthorPage.link.LinkText != authorNode.Name ? authorNode.AuthorPage.link.LinkText : authorNode.Name;

                            <a class="base-heading" href="@(authorNode.AuthorPage.link.LinkUrl)" @Html.Raw(authorNode.AuthorPage.link.LinkTarget) @Html.Raw(authorNode.AuthorPage.link.LinkTitle)>@Html.Raw(authorName)@Html.Raw(authorNode.AuthorPage.link.LinkTargetIcon)</a>
                        }
                        else
                        {
                            @Html.Raw(authorName)
                        }
                    </p>
                    @if (authorNode.AuthorBio.HasValue())
                    {
                        <div class="text base-text">
                            @Html.Raw(authorNode.AuthorBio)
                        </div>
                    }

                    @if (authorNode.SocialLinks.HasValue() && authorNode.SocialLinks.Any())
                    {
                        <!-- Social -->
                        <nav class="social">
                            <ul>
                                @foreach (USNMultiUrlPicker item in authorNode.SocialLinks)
                                {
                                    if (USNThemeService.DisplayLink(item))
                                    {
                                        <li>
                                            <span>
                                                <a href="@item.link.LinkUrl" @Html.Raw(item.link.LinkTarget) @Html.Raw(item.link.LinkTitle)>
                                                    @if (item.image.HasValue())
                                                    {
                                                        if (item.image.Value<string>("umbracoExtension") != "svg")
                                                        {
                                                            bool webPEnabled = Convert.ToBoolean(ConfigurationManager.AppSettings["USN_WEBP_Enabled"]);

                                                            <picture>
                                                                @if (webPEnabled)
                                                                {
                                                                    <source type="image/webp" data-srcset="@item.image.Url()?format=webp&height=160">
                                                                }
                                                                <img class="lazyload" src="@item.image.Url()?height=16" data-src="@item.image.Url()?height=160" alt="@(item.image.Value<string>("alternativeText"))">
                                                            </picture>
                                                        }
                                                        else
                                                        {
                                                            <img class="lazyload" src="@item.image.Url()" data-src="@item.image.Url()" alt="@(item.image.Value<string>("alternativeText"))">
                                                        }
                                                    }
                                                    else
                                                    {
                                                        @Html.Raw(item.link.LinkText)
                                                    }
                                                </a>
                                            </span>
                                        </li>
                                    }
                                }
                            </ul>
                        </nav>
                        <!--// Social -->
                    }
                </div>
                <!--// Info -->

            </div>
        </section>
        <!--// Author Bio -->
    }
}