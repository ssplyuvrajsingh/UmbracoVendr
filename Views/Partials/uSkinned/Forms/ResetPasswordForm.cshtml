@inherits USNStarterKit.ViewPages.USNViewPage<USNWebsite.USNModels.USNResetPasswordFormViewModel>

@if (!Model.TokenInvalid && !Model.TokenExpired)
{
    UsnglobalSettings globalSettings = (UsnglobalSettings)Umbraco.Content(Model.GlobalSettingsID);

    var containerId = "Container_" + Model.UniqueID;
    var errorId = "Error_" + Model.UniqueID;
    var ajaxLoadingId = "Loading_" + Model.UniqueID;
    var formId = "Form_" + Model.UniqueID;
    var submissionId = "SubmissionMessage_" + Model.UniqueID;

    <div class="form password-reset-form ajax-wrap">
        <div class="inner @(Model.FormBgColorClass) @(Model.FormColorLabel)-text">
            @using (Ajax.BeginForm("HandleResetPasswordSubmit", "USNMemberSurface", new AjaxOptions
            {
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = containerId,
                LoadingElementId = ajaxLoadingId
            }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("GlobalSettingsID", Model.GlobalSettingsID)
                @Html.Hidden("UniqueID", Model.UniqueID)
                @Html.Hidden("MemberID", Model.MemberID)
                @Html.Hidden("Token", Model.Token)

                if (Model.FormHeading.HasValue() || Model.FormIntroduction.HasValue() || Model.FormSecondaryHeading.HasValue())
                {
                    <div class="info short-margin-bottom">

                        @if (Model.FormSecondaryHeading.HasValue())
                        {
                            @Html.Raw(String.Format("<{0} class=\"secondary-heading {1} {2}-secondary-heading\">{3}</{0}>", Model.FormSecondaryHeading.HeadingTag, Model.FormSecondaryHeading.Style, Model.FormColorLabel, Model.FormSecondaryHeading.Text))
                        }

                        @if (Model.FormHeading.HasValue())
                        {
                            @Html.Raw(String.Format("<{0} class=\"heading main {1} {2}-heading\">{3}</{0}>", Model.FormHeading.HeadingTag, Model.FormHeading.Style, Model.FormColorLabel, Model.FormHeading.Text))
                        }

                        @if (Model.FormIntroduction.HasValue())
                        {
                            <div class="text @(Model.FormColorLabel)-text">
                                @Html.Raw(Model.FormIntroduction)
                            </div>
                        }

                    </div>
                }

                <div id="@containerId" class="form-inner">
                    <div class="alert alert-danger mb-3" id="@errorId" style="display:none">
                    </div>
                    <div id="@formId">
                        <fieldset>
                            <div class="form-group">
                                <label for="NewPassword" class="control-label">
                                    @Umbraco.GetDictionaryValue("USN Password Reset Form New Password Label") <em class="req">*</em>
                                </label>
                                @Html.PasswordFor(x => Model.NewPassword, new { @class = "form-control", aria_label = Umbraco.GetDictionaryValue("USN Password Reset Form New Password Label"), placeholder = Umbraco.GetDictionaryValue("USN Password Reset Form New Password Label") })
                                @Html.ValidationMessageFor(x => Model.NewPassword, Umbraco.GetDictionaryValue("USN Password Reset Form New Password Validation"))

                                <!-- Show hide password -->
                                <div class="show-password">
                                    <label>
                                        <input type="checkbox" onclick="showPasswordFunction('NewPassword')">
                                        <span>
                                            <i class="icon usn_ion-md-eye"></i>
                                            <i class="icon usn_ion-md-eye-off"></i>
                                        </span>
                                    </label>
                                </div>
                                <!--// Show hide password -->
                            </div>


                            @if (globalSettings.GoogleReCaptchasiteKey.HasValue() && globalSettings.GoogleReCaptchasecretKey.HasValue())
                            {
                                <div class="g-recaptcha" data-sitekey="@globalSettings.GoogleReCaptchasiteKey" data-size="@Model.CaptchaDataSize"></div>
                            }
                        </fieldset>
                        <fieldset>
                            <button role="button" class="btn @Model.FormButtonColorClass @Model.FormButtonHoverColorClass @(Model.FormButtonColorLabel)-btn-text @(Model.FormButtonColorLabel)-btn-borders" type="submit">
                                <span></span>
                                @(Model.FormButtonText.HasValue() ? Model.FormButtonText : Umbraco.GetDictionaryValue("USN Reset Password Form Button Text"))
                            </button>
                        </fieldset>
                    </div>
                    <div class="ajax-loading" id="@ajaxLoadingId" style="display:none">
                        <div class="loading">
                            <span class="message">@Umbraco.GetDictionaryValue("USN Reset Request Form Sending Message")</span>
                        </div>
                    </div>
                </div>
                <div id="@submissionId" style="display:none">
                    <div class="alert alert-success"><div class="info">@Html.Raw(Model.FormSubmissionMessage)</div></div>
                </div>
            }
        </div>
    </div>

}
else if (Model.TokenInvalid)
{
    <div class="alert alert-danger">
        <p>@Html.Raw(Umbraco.GetDictionaryValue("USN Password Reset Form Token Invalid"))</p>
    </div>
}
else if (Model.TokenExpired)
{
    <div class="alert alert-danger">
        <p>@Html.Raw(Umbraco.GetDictionaryValue("USN Password Reset Form Token Expired"))</p>
    </div>
}